import argparse
import os

import numpy as np
import h5py


parser = argparse.ArgumentParser(prog='GetTime_spykingcircus_0.2.py',description='Get spiketimes  preocesed in SpyKingCircus',formatter_class=argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('--resultFile',help='file experiment.result.hdf5, generated by SpyKingCircus',type=str, required=True)
parser.add_argument('--clusterFile',help='file experiment.cluster.hdf5, generated by SpyKingCircus',type=str, required=False)
parser.add_argument('--number',help='number of merge ',  default='', type=str, required=False)
parser.add_argument('--outputFolder',help='Output folder',type=str, required=True)

args = parser.parse_args()
rename_electrodoes = open('rename_electronode.txt', 'r')
filename = args.resultFile
clustername = args.clusterFile
outputFolder = args.outputFolder

sample = 20000.0
mintime = 30

if outputFolder[-1] != '/':
    outputFolder = outputFolder + '/'
try:
    os.mkdir(outputFolder)
except OSError:
    pass
lista = []
lista = rename_electrodoes.readlines()
rename_electrodoes.close()

hfile = h5py.File(filename, 'r')
f = hfile.get("spiketimes")



for key in f:
    data = f.get(key)
    data2 = np.array(data)/sample
    if len(data) < mintime:
        if data2.size > mintime:
            data2 = np.transpose(data2)
        else:
            print(key+': No superera el minimo de '+str(mintime)+\
            ' timestamp, dimension'+str(np.shape(data2)))
    print key
    np.savetxt('{}{}.txt'.format(outputFolder, key), data2)

print "El numero del electrodo fue corregido en "+str(args.number)+" unidades"
